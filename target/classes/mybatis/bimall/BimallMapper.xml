<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.mapper.bimall.BimallMapper">


  <select id="getAll" parameterType="map" resultType="map">

    select t.table_name, count_rows(t.table_name)  num_rows,
            ( select count(*) from user_tab_columns where table_name= t.table_name ) num_columns from user_tables t
            <if test="sort!=null and !''.equals(sort)">
              ORDER BY ${sort} ${order}
            </if>

  </select>

    <select id="checkTable" resultType="int" parameterType="java.lang.String">
        SELECT COUNT(*) FROM User_Tables WHERE table_name = #{0,jdbcType=VARCHAR}
    </select>

    <select id="selectTableStructure" resultType="map" parameterType="java.lang.String">
        select t.COLUMN_NAME,  t.DATA_TYPE, t.DATA_LENGTH,
        t.DATA_PRECISION, t.NULLABLE, t.COLUMN_ID, c.COMMENTS,
                (
        select a.CONSTRAINT_TYPE
        from user_constraints  a,USER_CONS_COLUMNS b
        where   a.CONSTRAINT_TYPE ='P'
         a. constraint_name=b.constraint_name
              and a.table_name =  #{0,jdbcType=VARCHAR} and b.column_name = t.COLUMN_NAME
        ) IS_PRIMARY,
           (
        select a.CONSTRAINT_TYPE
        from user_constraints  a,USER_CONS_COLUMNS b
        where   a.CONSTRAINT_TYPE ='P'
         a. constraint_name=b.constraint_name
              and a.table_name =  #{0,jdbcType=VARCHAR} and b.column_name = t.COLUMN_NAME
        ) IS_UNIQUE

        from user_tab_columns t, user_col_comments c

        where t.table_name = c.table_name  and t.column_name = c.column_name

        and t.table_name =  #{0,jdbcType=VARCHAR}
    </select>


    <update id="createNewTable" parameterType="map">

        ${sql}
    </update>

    <select id="selectAll" parameterType="java.lang.String" resultType="map">

        select  * from #{0}

    </select>


    <insert id="insert"   parameterType="map" >
        ${sqlInsert}


    </insert>

    <delete id="delete" parameterType="map" >
       DELETE  FROM   ${tbName}
        where EAF_ID IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.EAF_ID}
        </foreach>
    </delete>
</mapper>